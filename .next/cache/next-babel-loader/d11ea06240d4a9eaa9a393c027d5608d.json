{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\myPortfolio\\\\pages\\\\stocks\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Stock = function Stock(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.stock.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.stock.price.replace(/<[/]?[pb]>/g, '')));\n};\n\nStock.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, stock;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"https://financialmodelingprep.com/api/v3/company/stock/list/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            stock = _context.sent;\n            console.log(\"Fetched stock: \".concat(stock.name));\n            return _context.abrupt(\"return\", {\n              stock: stock\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Stock;","map":{"version":3,"sources":["C:/projects/myPortfolio/pages/stocks/[id].js"],"names":["Layout","fetch","Stock","props","stock","name","price","replace","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,KAAN,CAAYC,IAAjB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,KAAN,CAAYE,KAAZ,CAAkBC,OAAlB,CAA0B,aAA1B,EAAyC,EAAzC,CAAJ,CAFF,CADiB;AAAA,CAAnB;;AAOAL,KAAK,CAACM,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,EADc,GACPD,OAAO,CAACE,KADD,CACdD,EADc;AAAA;AAAA,mBAEJT,KAAK,uEAAgES,EAAhE,EAFD;;AAAA;AAEhBE,YAAAA,GAFgB;AAAA;AAAA,mBAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGhBT,YAAAA,KAHgB;AAKtBU,YAAAA,OAAO,CAACC,GAAR,0BAA8BX,KAAK,CAACC,IAApC;AALsB,6CAOf;AAAED,cAAAA,KAAK,EAALA;AAAF,aAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeF,KAAf","sourcesContent":["import Layout from '../../components/MyLayout';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Stock = props => (\r\n  <Layout>\r\n    <h1>{props.stock.name}</h1>\r\n    <p>{props.stock.price.replace(/<[/]?[pb]>/g, '')}</p>    \r\n  </Layout>\r\n);\r\n\r\nStock.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  const res = await fetch(`https://financialmodelingprep.com/api/v3/company/stock/list/${id}`);\r\n  const stock = await res.json();\r\n\r\n  console.log(`Fetched stock: ${stock.name}`);\r\n\r\n  return { stock };\r\n};\r\n\r\nexport default Stock;"]},"metadata":{},"sourceType":"module"}